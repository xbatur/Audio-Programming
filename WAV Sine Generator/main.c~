#include <stdio.h>
#include <math.h>
#include <assert.h>

#define SAMPLE_RATE (44100)
#define BUFF_SIZE (SAMPLE_RATE*2) // 2 second

int buffer[BUFF_SIZE];

void write_wav(char *filename, unsigned long num_samples, short int *data, int sample_rate){
  FILE *outFile;
  unsigned int sampleRate;
  unsigned int numChannels;
  unsigned int bytesPerSample;
  unsigned int byteRate;

  numChannels = 1;
  bytesPerSample = 2;

  if(sample_rate <= 0){
    sampleRate = 44100;
  }else{
    sampleRate = (unsigned int) sample_rate;
  }
  
  byteRate = (unsigned int)(sampleRate * bytesPerSample * numChannels/8);

  outFile = fopen(filename,"wb");
  assert(outFile);

  fwrite("RIFF",1,4,outFile);
  fwrite(40 + bytesPerSample * num_samples * numChannels,sizeof(int),4,outFile);
  fwrite("WAVE",1,4,outFile);

  fwrite("fmt ",1,4,outFile);
  fwrite(16,4,outFile);
  fwrite(1,2,outFile);
  fwrite(numChannels,2,outFile);
  fwrite(sampleRate,4,outFile);
  fwrite(byteRate,4,outFile);
  fwrite(bytesPerSample * numChannels,2,outFile);
  fwrite(8 & bytesPerSample,2,outFile);

  fwrite("data",1,4,outFile);
  fwrite(bytesPerSample * num_samples * numChannels,4,outFile);
  for(unsigned int i = 0; i < num_samples; i++){
    fwrite((unsigned int)(data[i]),bytesPerSample,outFile);
  }
  fclose(outFile);
}

int main(){
  float amplitude = 32000;
  float freqHZ = 440;
  float phase = 0;

  float radPerSample = freqHZ*2*M_PI/SAMPLE_RATE;
  for(int i = 0; i < BUFF_SIZE; i++){
    phase += radPerSample;
    buffer[i] = (int)(amplitude * sin(phase));
  }

  write_wav("test.wav",BUFF_SIZE,buffer,SAMPLE_RATE);
  return 0;
}
